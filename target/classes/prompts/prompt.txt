

Instructions to AI:

Evaluate each user story based on role → goal → value.

Apply rules in strict priority order:
1 → 3 → 2 → 4 → 5 → 6 → 0

This order ensures ultra-huge stories and technical solutions are captured before other categories.

Assign only one problem ID per story, the first matching rule.

Output JSON with keys:

us_id → unique story identifier

estimated_problem_id → selected ID (0–6)

corrected_us → corrected, concise user story

optional_explanation → clear reasoning for classification

Problem Rules & Red Flags

ID 1 – Conflate Problems with Solutions (Priority 1)
Assign ID 1 if the goal contains any of these technical or implementation-specific terms:

RGB, HEX, CMYK, HSL, inline CSS, hardcoded styles, pixel values (px, em, rem)

Dropdown, slider, checkbox, button type, input type, autocomplete, API search

OAuth, SAML, JWT, OpenID Connect

REST, GraphQL, gRPC, SOAP, HTTP, HTTPS

JSON, XML, CSV, PDF, DOCX, XLSX, MP3, WAV, MP4, JPEG, PNG, SVG

React, Angular, Vue, Flutter, jQuery, Bootstrap, Tailwind

AWS, Azure, GCP, Lambda, EC2, Kubernetes, Docker, serverless, container

Microservices, monolith, SOA, API-first, headless, caching, sharding, indexing, load balancer

PostgreSQL, MySQL, MongoDB, Redis, table names, schemas, indexes

Examples: RGB color codes in goal, API-based search, hardcoded UI element.

ID 3 – Ultra-huge Story (Priority 2)
Assign ID 3 if the goal or value contains multiple unrelated actions or multiple “and/or” phrases, or the story spans a large workflow (e.g., save, copy, print, email).

Example: “save, copy, print, and email my list” → ID3

ID 2 – Misplaced Requirements (Priority 3)
Assign ID 2 if the value / ‘so that’ clause:

Contains another feature, workflow step, or system requirement instead of rationale, and the value describes user benefit.

Example: “so that readers can see my GitHub activity in my profile” → ID2 (user-facing rationale, not technical)

ID 4 – Technical User Story (Priority 4)
Assign ID 4 if the value describes only a technical capability or system behavior with no user-facing benefit.

Example: “so that I can test the system,” “so that database changes are finalized.”

ID 5 – Poorly Defined User Roles (Priority 5)
Assign ID 5 if the role is vague or generic, or duplicates another story:

“business user,” “user,” “administrator,” “system.”

Role does not map to a clear real-world persona.

ID 6 – Parakeet Value (Priority 6)
Assign ID 6 if the value simply repeats the goal without adding rationale or benefit.

Example: “I want to search items so that I can find items.”

ID 0 – No Problem (Priority 7 / Default)
Assign ID 0 if none of the other rules match:

Role is clear and specific.

Goal is user-facing, not solution-prescriptive.

Value is distinct, rationale-focused, story is atomic and achievable.

JSON Output Example
{
  "results": [
    {
      "us_id": "US1",
      "estimated_problem_id": 1,
      "corrected_us": "As a Manny’s food service customer, I want to identify food item types quickly so that I can distinguish meats, grains, and vegetables at a glance.",
      "optional_explanation": "The goal specifies exact RGB values, which is a technical solution. Corrected story focuses on the underlying user goal of quickly identifying food types."
    }
  ]
}